Grammar

    0 $accept: Prog $end

    1 Prog: Stms ENDFILE

    2 Stms: Stm Stms
    3     | %empty

    4 Stm: ID ASSIGN_OP Aexpr ';'
    5    | DECLARE ID AS Type ';'
    6    | PRINT '(' Aexpr ')' ';'
    7    | BO Stms BC

    8 BO: '{'

    9 BC: '}'

   10 Type: P_TYPE

   11 Aexpr: Aexpr '+' Aexpr
   12      | Aexpr '-' Aexpr
   13      | Aexpr '*' Aexpr
   14      | Aexpr '/' Aexpr
   15      | '(' Aexpr ')'
   16      | '-' Aexpr
   17      | NUMBER
   18      | ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 15
')' (41) 6 15
'*' (42) 13
'+' (43) 11
'-' (45) 12 16
'/' (47) 14
';' (59) 4 5 6
'{' (123) 8
'}' (125) 9
error (256)
ID (258) 4 5 18
NUMBER (259) 17
DECLARE (260) 5
AS (261) 5
ASSIGN_OP (262) 4
P_TYPE (263) 10
PRINT (264) 6
ENDFILE (265) 1
UMINUS (266)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
Prog (22)
    on left: 1, on right: 0
Stms (23)
    on left: 2 3, on right: 1 2 7
Stm (24)
    on left: 4 5 6 7, on right: 2
BO (25)
    on left: 8, on right: 7
BC (26)
    on left: 9, on right: 7
Type (27)
    on left: 10, on right: 5
Aexpr (28)
    on left: 11 12 13 14 15 16 17 18, on right: 4 6 11 12 13 14 15
    16


State 0

    0 $accept: . Prog $end

    ID       shift, and go to state 1
    DECLARE  shift, and go to state 2
    PRINT    shift, and go to state 3
    '{'      shift, and go to state 4

    $default  reduce using rule 3 (Stms)

    Prog  go to state 5
    Stms  go to state 6
    Stm   go to state 7
    BO    go to state 8


State 1

    4 Stm: ID . ASSIGN_OP Aexpr ';'

    ASSIGN_OP  shift, and go to state 9


State 2

    5 Stm: DECLARE . ID AS Type ';'

    ID  shift, and go to state 10


State 3

    6 Stm: PRINT . '(' Aexpr ')' ';'

    '('  shift, and go to state 11


State 4

    8 BO: '{' .

    $default  reduce using rule 8 (BO)


State 5

    0 $accept: Prog . $end

    $end  shift, and go to state 12


State 6

    1 Prog: Stms . ENDFILE

    ENDFILE  shift, and go to state 13


State 7

    2 Stms: Stm . Stms

    ID       shift, and go to state 1
    DECLARE  shift, and go to state 2
    PRINT    shift, and go to state 3
    '{'      shift, and go to state 4

    $default  reduce using rule 3 (Stms)

    Stms  go to state 14
    Stm   go to state 7
    BO    go to state 8


State 8

    7 Stm: BO . Stms BC

    ID       shift, and go to state 1
    DECLARE  shift, and go to state 2
    PRINT    shift, and go to state 3
    '{'      shift, and go to state 4

    $default  reduce using rule 3 (Stms)

    Stms  go to state 15
    Stm   go to state 7
    BO    go to state 8


State 9

    4 Stm: ID ASSIGN_OP . Aexpr ';'

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    Aexpr  go to state 20


State 10

    5 Stm: DECLARE ID . AS Type ';'

    AS  shift, and go to state 21


State 11

    6 Stm: PRINT '(' . Aexpr ')' ';'

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    Aexpr  go to state 22


State 12

    0 $accept: Prog $end .

    $default  accept


State 13

    1 Prog: Stms ENDFILE .

    $default  reduce using rule 1 (Prog)


State 14

    2 Stms: Stm Stms .

    $default  reduce using rule 2 (Stms)


State 15

    7 Stm: BO Stms . BC

    '}'  shift, and go to state 23

    BC  go to state 24


State 16

   18 Aexpr: ID .

    $default  reduce using rule 18 (Aexpr)


State 17

   17 Aexpr: NUMBER .

    $default  reduce using rule 17 (Aexpr)


State 18

   16 Aexpr: '-' . Aexpr

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    Aexpr  go to state 25


State 19

   15 Aexpr: '(' . Aexpr ')'

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    Aexpr  go to state 26


State 20

    4 Stm: ID ASSIGN_OP Aexpr . ';'
   11 Aexpr: Aexpr . '+' Aexpr
   12      | Aexpr . '-' Aexpr
   13      | Aexpr . '*' Aexpr
   14      | Aexpr . '/' Aexpr

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ';'  shift, and go to state 31


State 21

    5 Stm: DECLARE ID AS . Type ';'

    P_TYPE  shift, and go to state 32

    Type  go to state 33


State 22

    6 Stm: PRINT '(' Aexpr . ')' ';'
   11 Aexpr: Aexpr . '+' Aexpr
   12      | Aexpr . '-' Aexpr
   13      | Aexpr . '*' Aexpr
   14      | Aexpr . '/' Aexpr

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ')'  shift, and go to state 34


State 23

    9 BC: '}' .

    $default  reduce using rule 9 (BC)


State 24

    7 Stm: BO Stms BC .

    $default  reduce using rule 7 (Stm)


State 25

   11 Aexpr: Aexpr . '+' Aexpr
   12      | Aexpr . '-' Aexpr
   13      | Aexpr . '*' Aexpr
   14      | Aexpr . '/' Aexpr
   16      | '-' Aexpr .

    $default  reduce using rule 16 (Aexpr)


State 26

   11 Aexpr: Aexpr . '+' Aexpr
   12      | Aexpr . '-' Aexpr
   13      | Aexpr . '*' Aexpr
   14      | Aexpr . '/' Aexpr
   15      | '(' Aexpr . ')'

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ')'  shift, and go to state 35


State 27

   11 Aexpr: Aexpr '+' . Aexpr

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    Aexpr  go to state 36


State 28

   12 Aexpr: Aexpr '-' . Aexpr

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    Aexpr  go to state 37


State 29

   13 Aexpr: Aexpr '*' . Aexpr

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    Aexpr  go to state 38


State 30

   14 Aexpr: Aexpr '/' . Aexpr

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    Aexpr  go to state 39


State 31

    4 Stm: ID ASSIGN_OP Aexpr ';' .

    $default  reduce using rule 4 (Stm)


State 32

   10 Type: P_TYPE .

    $default  reduce using rule 10 (Type)


State 33

    5 Stm: DECLARE ID AS Type . ';'

    ';'  shift, and go to state 40


State 34

    6 Stm: PRINT '(' Aexpr ')' . ';'

    ';'  shift, and go to state 41


State 35

   15 Aexpr: '(' Aexpr ')' .

    $default  reduce using rule 15 (Aexpr)


State 36

   11 Aexpr: Aexpr . '+' Aexpr
   11      | Aexpr '+' Aexpr .
   12      | Aexpr . '-' Aexpr
   13      | Aexpr . '*' Aexpr
   14      | Aexpr . '/' Aexpr

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 11 (Aexpr)


State 37

   11 Aexpr: Aexpr . '+' Aexpr
   12      | Aexpr . '-' Aexpr
   12      | Aexpr '-' Aexpr .
   13      | Aexpr . '*' Aexpr
   14      | Aexpr . '/' Aexpr

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 12 (Aexpr)


State 38

   11 Aexpr: Aexpr . '+' Aexpr
   12      | Aexpr . '-' Aexpr
   13      | Aexpr . '*' Aexpr
   13      | Aexpr '*' Aexpr .
   14      | Aexpr . '/' Aexpr

    $default  reduce using rule 13 (Aexpr)


State 39

   11 Aexpr: Aexpr . '+' Aexpr
   12      | Aexpr . '-' Aexpr
   13      | Aexpr . '*' Aexpr
   14      | Aexpr . '/' Aexpr
   14      | Aexpr '/' Aexpr .

    $default  reduce using rule 14 (Aexpr)


State 40

    5 Stm: DECLARE ID AS Type ';' .

    $default  reduce using rule 5 (Stm)


State 41

    6 Stm: PRINT '(' Aexpr ')' ';' .

    $default  reduce using rule 6 (Stm)
